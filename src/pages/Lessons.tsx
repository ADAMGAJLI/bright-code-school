
import { useState } from 'react';
import { CheckCircle, Lock, Play, Book, Code, Lightbulb } from 'lucide-react';
import ProgressTracker from '../components/ProgressTracker';
import CodeEditor from '../components/CodeEditor';

const Lessons = () => {
  const [completedLessons, setCompletedLessons] = useState<number[]>([]);
  const [selectedLesson, setSelectedLesson] = useState<number | null>(null);

  const lessons = [
    {
      id: 1,
      title: 'ููุฏูุฉ ูู ุงูุจุฑูุฌุฉ',
      icon: '๐',
      description: 'ุชุนุฑู ุนูู ุฃุณุงุณูุงุช ุงูุจุฑูุฌุฉ ูุฃูููุชูุง ูู ุญูุงุชูุง ุงูููููุฉ',
      content: `
# ูุฑุญุจุงู ุจู ูู ุนุงูู ุงูุจุฑูุฌุฉ! ๐

## ูุง ูู ุงูุจุฑูุฌุฉุ
ุงูุจุฑูุฌุฉ ูู ูุบุฉ ุงูุชูุงุตู ูุน ุงูููุจููุชุฑ! ุชูุงูุงู ูุซููุง ูุชุญุฏุซ ุจุงูุนุฑุจูุฉ ุฃู ุงูุฅูุฌููุฒูุฉุ ูุณุชุฎุฏู ูุบุงุช ุงูุจุฑูุฌุฉ ููุชุญุฏุซ ูุน ุงูููุจููุชุฑ.

## ููุงุฐุง ูุชุนูู ุงูุจุฑูุฌุฉุ
- ๐ฎ ูุตูุน ุงูุฃูุนุงุจ ุงููุณููุฉ
- ๐ฑ ูุชุทููุฑ ุงูุชุทุจููุงุช ุงููููุฏุฉ  
- ๐ ูุจูุงุก ุงูููุงูุน ุงูุฑุงุฆุนุฉ
- ๐ค ูุญู ุงููุดุงูู ุจุทุฑููุฉ ุฐููุฉ

## ุฃูู ุจุฑูุงูุฌ ูู!
ุฏุนูุง ููุชุจ ุฃูู ุจุฑูุงูุฌ ุจุณูุท:
      `,
      code: 'console.log("ูุฑุญุจุงูุ ุฃูุง ูุจุฑูุฌ ุตุบูุฑ! ๐");',
      exercise: 'ุงูุชุจ ุจุฑูุงูุฌุงู ูุทุจุน ุงุณูู ุนูู ุงูุดุงุดุฉ'
    },
    {
      id: 2,
      title: 'ุงููุชุบูุฑุงุช',
      icon: '๐ฆ',
      description: 'ุชุนูู ููููุฉ ุญูุธ ุงููุนูููุงุช ูู ุตูุงุฏูู ุฎุงุตุฉ ุชูุณูู ุงููุชุบูุฑุงุช',
      content: `
# ุงููุชุบูุฑุงุช - ุตูุงุฏูู ุงููุนูููุงุช ๐ฆ

## ูุง ูู ุงููุชุบูุฑุงุชุ
ุงููุชุบูุฑุงุช ูุซู ุงูุตูุงุฏูู ุงูุชู ูุถุน ูููุง ุงููุนูููุงุช:
- ุตูุฏูู ููุฃุณูุงุก
- ุตูุฏูู ููุฃุฑูุงู  
- ุตูุฏูู ูููููุงุช

## ุฃููุงุน ุงููุชุบูุฑุงุช:
- **ุงููุตูุต**: ูููููุงุช ูุงูุฌูู
- **ุงูุฃุฑูุงู**: ููุฃุนุฏุงุฏ ูุงูุญุณุงุจุงุช
- **ุงูููุทู**: ููููู ุงูุตุญูุญุฉ ุฃู ุงูุฎุงุทุฆุฉ

## ุฃูุซูุฉ ุนูููุฉ:
      `,
      code: `// ุฅูุดุงุก ูุชุบูุฑุงุช ูุฎุชููุฉ
let ุงุณูู = "ุฃุญูุฏ";
let ุนูุฑู = 12;
let ุฃุญุจ_ุงูุจุฑูุฌุฉ = true;

console.log("ุงุณูู ูู: " + ุงุณูู);
console.log("ุนูุฑู: " + ุนูุฑู + " ุณูุฉ");
console.log("ุฃุญุจ ุงูุจุฑูุฌุฉ: " + ุฃุญุจ_ุงูุจุฑูุฌุฉ);`,
      exercise: 'ุฃูุดุฆ ูุชุบูุฑุงุช ูุงุณูู ูุนูุฑู ูููุงูุชู ุงูููุถูุฉ'
    },
    {
      id: 3,
      title: 'ุงูุดุฑูุท',
      icon: '๐',
      description: 'ุชุนูู ููู ูุชุฎุฐ ุงูููุจููุชุฑ ูุฑุงุฑุงุช ุฐููุฉ ุจุงุณุชุฎุฏุงู ุงูุดุฑูุท',
      content: `
# ุงูุดุฑูุท - ุงุชุฎุงุฐ ุงููุฑุงุฑุงุช ๐ค

## ูุง ูู ุงูุดุฑูุทุ
ุงูุดุฑูุท ุชุณุงุนุฏ ุงูุจุฑูุงูุฌ ุนูู ุงุชุฎุงุฐ ูุฑุงุฑุงุช:
- ุฅุฐุง ูุงู ุงูุทูุณ ูุทูุฑุงูุ ุฎุฐ ูุธูุฉ
- ุฅุฐุง ูุงู ุนูุฑู ุฃูุจุฑ ูู 10ุ ููููู ูุนุจ ูุฐู ุงููุนุจุฉ

## ุฃููุงุน ุงูุดุฑูุท:
- **if**: ุฅุฐุง ูุงู ุงูุดุฑุท ุตุญูุญุงู
- **else**: ูุฅูุง (ุฅุฐุง ูู ููู ุตุญูุญุงู)
- **else if**: ุฃู ุฅุฐุง ูุงู ุดุฑุท ุขุฎุฑ ุตุญูุญุงู

## ูุซุงู ุนููู:
      `,
      code: `let ุฏุฑุฌุฉ_ุงูุญุฑุงุฑุฉ = 25;

if (ุฏุฑุฌุฉ_ุงูุญุฑุงุฑุฉ > 30) {
    console.log("ุงูุทูุณ ุญุงุฑ! ๐");
} else if (ุฏุฑุฌุฉ_ุงูุญุฑุงุฑุฉ > 20) {
    console.log("ุงูุทูุณ ูุนุชุฏู! ๐ค๏ธ");
} else {
    console.log("ุงูุทูุณ ุจุงุฑุฏ! โ๏ธ");
}`,
      exercise: 'ุงูุชุจ ุจุฑูุงูุฌุงู ูุญุฏุฏ ูุง ุฅุฐุง ูุงู ุงูุฑูู ุฒูุฌู ุฃู ูุฑุฏู'
    },
    {
      id: 4,
      title: 'ุงูุญููุงุช',
      icon: '๐',
      description: 'ุงูุชุดู ููููุฉ ุชูุฑุงุฑ ุงูููุงู ุจุณูููุฉ ุจุงุณุชุฎุฏุงู ุงูุญููุงุช',
      content: `
# ุงูุญููุงุช - ุชูุฑุงุฑ ุงูููุงู ๐

## ูุง ูู ุงูุญููุงุชุ
ุงูุญููุงุช ุชุณุงุนุฏูุง ุนูู ุชูุฑุงุฑ ููุณ ุงูุนูู ุนุฏุฉ ูุฑุงุช:
- ุทุจุงุนุฉ ุงูุฃุฑูุงู ูู 1 ุฅูู 10
- ุชูุฑุงุฑ ุฃุบููุฉ ููุถูุฉ
- ุนุฏ ุงููุฌูู ูู ุงูุณูุงุก

## ุฃููุงุน ุงูุญููุงุช:
- **for**: ููุชูุฑุงุฑ ุนุฏุฏ ูุนูู ูู ุงููุฑุงุช
- **while**: ููุชูุฑุงุฑ ุทุงููุง ุงูุดุฑุท ุตุญูุญ

## ุฃูุซูุฉ ุนูููุฉ:
      `,
      code: `// ุญููุฉ for - ุทุจุงุนุฉ ุงูุฃุฑูุงู ูู 1 ุฅูู 5
for (let i = 1; i <= 5; i++) {
    console.log("ุงูุฑูู: " + i + " โญ");
}

// ุญููุฉ while - ุงูุนุฏ ุงูุชูุงุฒูู
let ุนุฏุงุฏ = 3;
while (ุนุฏุงุฏ > 0) {
    console.log("๐ " + ุนุฏุงุฏ);
    ุนุฏุงุฏ--;
}
console.log("ุงูุทูุงู! ๐");`,
      exercise: 'ุงุณุชุฎุฏู ุญููุฉ ูุทุจุงุนุฉ ุฌุฏูู ุงูุถุฑุจ ููุฑูู 3'
    },
    {
      id: 5,
      title: 'ุงูุฏูุงู',
      icon: 'โ๏ธ',
      description: 'ุชุนูู ููููุฉ ุฅูุดุงุก ุฃุฏูุงุช ูููุฏุฉ ูุงุจูุฉ ูุฅุนุงุฏุฉ ุงูุงุณุชุฎุฏุงู',
      content: `
# ุงูุฏูุงู - ุงูุฃุฏูุงุช ุงููููุฏุฉ โ๏ธ

## ูุง ูู ุงูุฏูุงูุ
ุงูุฏูุงู ูุซู ุงูุขูุงุช ุงูุตุบูุฑุฉ:
- ุชุฃุฎุฐ ุดูุฆุงู (ูุฏุฎูุงุช)
- ุชุนูู ุนููู
- ุชุนุทูู ุงููุชูุฌุฉ (ูุฎุฑุฌุงุช)

## ููุงุฐุง ูุณุชุฎุฏู ุงูุฏูุงูุ
- ูุชุฌูุจ ุชูุฑุงุฑ ุงูููุฏ
- ูุชูุธูู ุงูุจุฑูุงูุฌ
- ูุญู ูุดุงูู ูุนูุฏุฉ ุฎุทูุฉ ุจุฎุทูุฉ

## ุฃูุซูุฉ ุนูููุฉ:
      `,
      code: `// ุฏุงูุฉ ููุชุฑุญูุจ
function ุฑุญุจ(ุงูุงุณู) {
    return "ูุฑุญุจุงู " + ุงูุงุณู + "! ๐";
}

// ุฏุงูุฉ ููุญุณุงุจ
function ุงุฌูุน(ุฑูู1, ุฑูู2) {
    return ุฑูู1 + ุฑูู2;
}

// ุงุณุชุฎุฏุงู ุงูุฏูุงู
console.log(ุฑุญุจ("ุณุงุฑุฉ"));
console.log("ุงููุชูุฌุฉ: " + ุงุฌูุน(5, 3));

// ุฏุงูุฉ ููุชุญูู ูู ุงูุฑูู ุงูุฒูุฌู
function ูู_ุฒูุฌู(ุฑูู) {
    if (ุฑูู % 2 === 0) {
        return "ุฒูุฌู โ";
    } else {
        return "ูุฑุฏู โ";
    }
}`,
      exercise: 'ุฃูุดุฆ ุฏุงูุฉ ุชุญุณุจ ูุณุงุญุฉ ุงููุณุชุทูู (ุงูุทูู ร ุงูุนุฑุถ)'
    },
    {
      id: 6,
      title: 'ุงููุดุฑูุน ุงูุชุทุจููู',
      icon: '๐',
      description: 'ุงุฌูุน ูู ูุง ุชุนููุชู ูู ูุดุฑูุน ุดุงูู ูููุชุน',
      content: `
# ุงููุดุฑูุน ุงูุชุทุจููู - ูุนุจุฉ ุงูุชุฎููู ๐ฏ

## ูุตู ุงููุดุฑูุน:
ุณูุจูู ูุนุจุฉ ุชุฎููู ุงูุฑูู ุงูุณุฑู!
- ุงูููุจููุชุฑ ูุฎุชุงุฑ ุฑููุงู ุณุฑูุงู
- ุงููุณุชุฎุฏู ูุญุงูู ุชุฎูููู
- ุงูุจุฑูุงูุฌ ูุนุทู ุชูููุญุงุช

## ุงูููุงููู ุงููุณุชุฎุฏูุฉ:
- โ ุงููุชุบูุฑุงุช: ูุญูุธ ุงูุฑูู ุงูุณุฑู ูุงูุชุฎููู
- โ ุงูุดุฑูุท: ููููุงุฑูุฉ ุจูู ุงูุฃุฑูุงู
- โ ุงูุญููุงุช: ููุณูุงุญ ุจูุญุงููุงุช ูุชุนุฏุฏุฉ
- โ ุงูุฏูุงู: ูุชูุธูู ุงูููุฏ

## ุงูููุฏ ุงููุงูู:
      `,
      code: `// ูุนุจุฉ ุชุฎููู ุงูุฑูู ุงูุณุฑู
function ูุนุจุฉ_ุงูุชุฎููู() {
    let ุงูุฑูู_ุงูุณุฑู = Math.floor(Math.random() * 10) + 1;
    let ุงููุญุงููุงุช = 3;
    
    console.log("๐ฏ ูุฑุญุจุงู ุจู ูู ูุนุจุฉ ุงูุชุฎููู!");
    console.log("ุฎูู ุฑููุงู ุจูู 1 ู 10");
    console.log("ูุฏูู " + ุงููุญุงููุงุช + " ูุญุงููุงุช");
    
    // ูุญุงูุงุฉ ุชุฎููู ุงููุณุชุฎุฏู
    let ุชุฎูููุงุช = [5, 8, 3]; // ุฃูุซูุฉ ุนูู ุงูุชุฎูููุงุช
    
    for (let i = 0; i < ุชุฎูููุงุช.length; i++) {
        let ุงูุชุฎููู = ุชุฎูููุงุช[i];
        console.log("\\nุงููุญุงููุฉ " + (i + 1) + ": " + ุงูุชุฎููู);
        
        if (ุงูุชุฎููู === ุงูุฑูู_ุงูุณุฑู) {
            console.log("๐ ูุจุฑูู! ูุฒุช!");
            console.log("ุงูุฑูู ุงูุณุฑู ูุงู: " + ุงูุฑูู_ุงูุณุฑู);
            return;
        } else if (ุงูุชุฎููู < ุงูุฑูู_ุงูุณุฑู) {
            console.log("๐ ุงูุฑูู ุฃูุจุฑ!");
        } else {
            console.log("๐ ุงูุฑูู ุฃุตุบุฑ!");
        }
        
        ุงููุญุงููุงุช--;
        if (ุงููุญุงููุงุช > 0) {
            console.log("ุงููุญุงููุงุช ุงููุชุจููุฉ: " + ุงููุญุงููุงุช);
        }
    }
    
    console.log("\\n๐ ุงูุชูุช ุงููุญุงููุงุช!");
    console.log("ุงูุฑูู ุงูุณุฑู ูุงู: " + ุงูุฑูู_ุงูุณุฑู);
    console.log("ุญุงูู ูุฑุฉ ุฃุฎุฑู! ๐ช");
}

// ุชุดุบูู ุงููุนุจุฉ
ูุนุจุฉ_ุงูุชุฎููู();`,
      exercise: 'ุทูุฑ ุงููุนุจุฉ ุจุฅุถุงูุฉ ูุณุชููุงุช ุตุนูุจุฉ ูุฎุชููุฉ'
    }
  ];

  const toggleLessonCompletion = (lessonId: number) => {
    if (completedLessons.includes(lessonId)) {
      setCompletedLessons(completedLessons.filter(id => id !== lessonId));
    } else {
      setCompletedLessons([...completedLessons, lessonId]);
    }
  };

  const isLessonUnlocked = (lessonId: number) => {
    if (lessonId === 1) return true;
    return completedLessons.includes(lessonId - 1);
  };

  const currentLesson = lessons.find(lesson => lesson.id === selectedLesson);

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4">
            ๐ ุฏุฑูุณ ุงูุจุฑูุฌุฉ
          </h1>
          <p className="text-xl text-gray-600">
            ุงุจุฏุฃ ุฑุญูุชู ุงูุชุนููููุฉ ุฎุทูุฉ ุจุฎุทูุฉ ูู ุงูุฃุณุงุณูุงุช ุฅูู ุงููุดุงุฑูุน ุงูุนูููุฉ
          </p>
        </div>

        <ProgressTracker 
          completedLessons={completedLessons}
          totalLessons={lessons.length}
          currentLesson={selectedLesson || undefined}
        />

        <div className="grid lg:grid-cols-3 gap-8">
          {/* Lessons List */}
          <div className="lg:col-span-1">
            <h2 className="text-2xl font-bold mb-6 text-gray-800">ูุงุฆูุฉ ุงูุฏุฑูุณ</h2>
            <div className="space-y-4">
              {lessons.map((lesson) => {
                const isCompleted = completedLessons.includes(lesson.id);
                const isUnlocked = isLessonUnlocked(lesson.id);
                const isSelected = selectedLesson === lesson.id;

                return (
                  <div
                    key={lesson.id}
                    onClick={() => isUnlocked && setSelectedLesson(lesson.id)}
                    className={`p-4 rounded-lg border-2 transition-all cursor-pointer ${
                      isSelected
                        ? 'border-blue-500 bg-blue-50'
                        : isCompleted
                        ? 'border-green-500 bg-green-50'
                        : isUnlocked
                        ? 'border-gray-200 bg-white hover:border-blue-300'
                        : 'border-gray-200 bg-gray-100 cursor-not-allowed opacity-60'
                    }`}
                  >
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-3 rtl:space-x-reverse">
                        <span className="text-2xl">{lesson.icon}</span>
                        <div>
                          <h3 className="font-bold text-lg text-gray-800">
                            {lesson.title}
                          </h3>
                          <p className="text-sm text-gray-600">
                            {lesson.description}
                          </p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2 rtl:space-x-reverse">
                        {isCompleted ? (
                          <CheckCircle className="text-green-500" size={24} />
                        ) : isUnlocked ? (
                          <Play className="text-blue-500" size={20} />
                        ) : (
                          <Lock className="text-gray-400" size={20} />
                        )}
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>

          {/* Lesson Content */}
          <div className="lg:col-span-2">
            {currentLesson ? (
              <div className="bg-white rounded-lg shadow-lg p-6">
                <div className="flex items-center justify-between mb-6">
                  <div className="flex items-center space-x-3 rtl:space-x-reverse">
                    <span className="text-3xl">{currentLesson.icon}</span>
                    <h2 className="text-3xl font-bold text-gray-800">
                      {currentLesson.title}
                    </h2>
                  </div>
                  <button
                    onClick={() => toggleLessonCompletion(currentLesson.id)}
                    className={`px-6 py-3 rounded-lg font-medium transition-all ${
                      completedLessons.includes(currentLesson.id)
                        ? 'bg-green-500 text-white'
                        : 'bg-blue-500 text-white hover:bg-blue-600'
                    }`}
                  >
                    {completedLessons.includes(currentLesson.id) ? 'โ ููุชูู' : 'โ๏ธ ุชู ุงูุฅูุฌุงุฒ'}
                  </button>
                </div>

                {/* Lesson Content */}
                <div className="mb-8">
                  <div className="prose prose-lg max-w-none text-right">
                    {currentLesson.content.split('\n').map((line, index) => {
                      if (line.startsWith('#')) {
                        const level = line.match(/^#+/)?.[0].length || 1;
                        const text = line.replace(/^#+\s*/, '');
                        const Tag = `h${Math.min(level, 6)}` as keyof JSX.IntrinsicElements;
                        return (
                          <Tag key={index} className="font-bold text-gray-800 mb-4">
                            {text}
                          </Tag>
                        );
                      } else if (line.startsWith('- ')) {
                        return (
                          <li key={index} className="text-gray-700 mb-2 mr-4">
                            {line.replace(/^-\s*/, '')}
                          </li>
                        );
                      } else if (line.trim()) {
                        return (
                          <p key={index} className="text-gray-700 mb-4 leading-relaxed">
                            {line}
                          </p>
                        );
                      }
                      return <br key={index} />;
                    })}
                  </div>
                </div>

                {/* Code Example */}
                <div className="mb-8">
                  <h3 className="text-xl font-bold mb-4 flex items-center space-x-2 rtl:space-x-reverse">
                    <Code className="text-blue-500" />
                    <span>ูุซุงู ุนููู:</span>
                  </h3>
                  <CodeEditor initialCode={currentLesson.code} />
                </div>

                {/* Exercise */}
                <div className="bg-yellow-50 border-r-4 border-yellow-400 p-6 rounded-lg">
                  <h3 className="text-xl font-bold mb-3 flex items-center space-x-2 rtl:space-x-reverse text-yellow-800">
                    <Lightbulb className="text-yellow-600" />
                    <span>ุชูุฑูู ุชุทุจููู:</span>
                  </h3>
                  <p className="text-yellow-800 font-medium">
                    {currentLesson.exercise}
                  </p>
                </div>
              </div>
            ) : (
              <div className="bg-white rounded-lg shadow-lg p-12 text-center">
                <div className="text-6xl mb-6">๐</div>
                <h2 className="text-2xl font-bold text-gray-800 mb-4">
                  ุงุฎุชุฑ ุฏุฑุณุงู ูุชุจุฏุฃ ุงูุชุนูู
                </h2>
                <p className="text-gray-600 text-lg">
                  ุงููุฑ ุนูู ุฃู ุฏุฑุณ ูู ุงููุงุฆูุฉ ุนูู ุงููุณุงุฑ ูุชุจุฏุฃ ุฑุญูุฉ ุงูุชุนูู ุงูููุชุนุฉ!
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Lessons;
